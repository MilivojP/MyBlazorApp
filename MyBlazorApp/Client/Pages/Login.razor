@page "/login"
@using MyBlazorApp.Shared.Auth
@using MyBlazorApp.Shared.Models
@using MyBlazorApp.Client.Validation
@using System.Net
@inject HttpClient Http
@inject IJSRuntime jsr
@inject NavigationManager NavigationManager

<h1>Login</h1>

<EditForm Model="user" OnValidSubmit="OnValid" style="max-width:500px;">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="user.Email" placeholder="Enter Email" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-2">
        <InputText type="password" Class="form-control" @bind-Value="user.Password" placeholder="Enter Password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
     <button class="btn btn-secondary" disabled="@isDisabled">LogIn</button>
</EditForm>

@code {
    private LoginDto user = new LoginDto();
    bool isDisabled = false;

    private async Task OnValid()
    {
        isDisabled = true;

        using (var msg = await Http.PostAsJsonAsync<LoginDto>("/api/Auth/login", user, System.Threading.CancellationToken.None))
        {
            if (msg.IsSuccessStatusCode)
            {
                Token result = await msg.Content.ReadFromJsonAsync<Token>();
                isDisabled = false;
                //await jsr.InvokeVoidAsync("localStorage.setItem", "user", $"{result.AccessToken};{result.RefreshToken}").ConfigureAwait(false);
                NavigationManager.NavigateTo("/");       
            }        
        } 
    }
}