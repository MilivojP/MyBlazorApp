@page "/sickleave/edit/{Id:int}"
@using MyBlazorApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Edit SickLeave</h1>
<hr />
<EditForm Model="@sickleave" OnValidSubmit="SaveSickLeave">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="mb-3">
        <label for="SickLeave type" class="form-label">SickLeave type</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="sickleave.LeaveType" />
        </div>
        <ValidationMessage For="@(() => sickleave.LeaveType)" />
    </div>
    <div class="mb-3">
        <label for="Start Date" class="form-label">Start Date</label>
        <div class="col-md-4">
            <InputDate @bind-Value="sickleave.StartDate" />
        </div>
        <ValidationMessage For="@(() => sickleave.StartDate)" />
    </div>
    <div class="mb-3">
        <label for="End Date" class="form-label">End Date</label>
        <div class="col-md-4">
            <InputDate @bind-Value="sickleave.EndDate" />
        </div>
        <ValidationMessage For="@(() => sickleave.EndDate)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    protected SickLeaveDto sickleave = new();

    protected override async Task OnParametersSetAsync()
    {
        sickleave = await Http.GetFromJsonAsync<SickLeaveDto>("api/sickleave/" + Id);
    }

    protected async Task SaveSickLeave()
    {
        await Http.PutAsJsonAsync("api/sickleave", sickleave);
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/sickleavelist");
    }
}

