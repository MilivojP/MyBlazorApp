@page "/vacationlist"
@using MyBlazorApp.Shared.Models
@inject HttpClient Http

<h1>Vacation</h1>
<p></p>
<div class="row">
    <div class="col-md-6">
        <a href='/vacation/request' class="btn btn-primary" role="button">
            <i class="fas fa-user-plus"></i>
            Add Vacation
        </a>
    </div>
</div>

<br />

@if (vacationList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>DateFrom</th>
                <th>DateTo</th>
                <th>Status</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Vacation in vacationList)
            {
                <tr>
                    <td>@Vacation.DateFrom.ToShortDateString()</td>
                    <td>@Vacation.DateTo.ToShortDateString()</td>
                    <td>@Vacation.Status</td>
                    <td>@Vacation.Notes</td>
                    <td>
                        @if (@Vacation.Status==MyBlazorApp.Shared.Enumerations.VacationStatus.Requested)
                        {
                            <a href='/vacation/approwed/@Vacation.Id' class="btn btn-outline-dark" role="button">
                                Approv
                            </a>
                            <a href='/vacation/rejected/@Vacation.Id' class="btn btn-outline-danger" role="button">
                                Reject
                            </a>
                        }
                        else
                        {
                            <a href='/vacation/approwed/@Vacation.Id' class="btn btn-outline-dark" role="button" hidden="hidden">
                                Approv
                            </a>
                            <a href='/vacation/rejected/@Vacation.Id' class="btn btn-outline-danger" role="button" hidden="hidden">
                                Reject
                            </a>                            
                        }

                    </td>
                </tr>
            }
        </tbody>

    </table>
}

@code {
    protected List<VacationDto> vacationList = new();
    //protected List<VacationDto> searchDay = new();
    //protected string SearchString { get; set; }= string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetVacations();
    }
    protected async Task GetVacations()
    {
        vacationList = await Http.GetFromJsonAsync<List<VacationDto>>("api/vacation");
        //searchDay = vacationList;
    }
  

}
